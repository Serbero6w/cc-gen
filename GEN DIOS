<html lang="en"><head><script type="text/javascript" async="" src="https://www.google-analytics.com/analytics.js"></script><script>(function(){function hookGeo() {
    //<![CDATA[
    const WAIT_TIME = 100;
    const hookedObj = {
      getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
      watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
      fakeGeo: true,
      genLat: 38.883333,
      genLon: -77.000
    };
  
    function waitGetCurrentPosition() {
      if ((typeof hookedObj.fakeGeo !== 'undefined')) {
        if (hookedObj.fakeGeo === true) {
          hookedObj.tmp_successCallback({
            coords: {
              latitude: hookedObj.genLat,
              longitude: hookedObj.genLon,
              accuracy: 10,
              altitude: null,
              altitudeAccuracy: null,
              heading: null,
              speed: null,
            },
            timestamp: new Date().getTime(),
          });
        } else {
          hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
        }
      } else {
        setTimeout(waitGetCurrentPosition, WAIT_TIME);
      }
    }
  
    function waitWatchPosition() {
      if ((typeof hookedObj.fakeGeo !== 'undefined')) {
        if (hookedObj.fakeGeo === true) {
          navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
          return Math.floor(Math.random() * 10000); // random id
        } else {
          hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        }
      } else {
        setTimeout(waitWatchPosition, WAIT_TIME);
      }
    }
  
    Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
      hookedObj.tmp_successCallback = successCallback;
      hookedObj.tmp_errorCallback = errorCallback;
      hookedObj.tmp_options = options;
      waitGetCurrentPosition();
    };
    Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
      hookedObj.tmp2_successCallback = successCallback;
      hookedObj.tmp2_errorCallback = errorCallback;
      hookedObj.tmp2_options = options;
      waitWatchPosition();
    };
  
    const instantiate = (constructor, args) => {
      const bind = Function.bind;
      const unbind = bind.bind(bind);
      return new (unbind(constructor, null).apply(null, args));
    }
  
    Blob = function (_Blob) {
      function secureBlob(...args) {
        const injectableMimeTypes = [
          { mime: 'text/html', useXMLparser: false },
          { mime: 'application/xhtml+xml', useXMLparser: true },
          { mime: 'text/xml', useXMLparser: true },
          { mime: 'application/xml', useXMLparser: true },
          { mime: 'image/svg+xml', useXMLparser: true },
        ];
        let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));
  
        if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
          const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
          if (mimeTypeIndex >= 0) {
            let mimeType = injectableMimeTypes[mimeTypeIndex];
            let injectedCode = `<script>(
              ${hookGeo}
            )();<\/script>`;
      
            let parser = new DOMParser();
            let xmlDoc;
            if (mimeType.useXMLparser === true) {
              xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
            } else {
              xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
            }
  
            if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
              xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
      
              if (mimeType.useXMLparser === true) {
                args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
              } else {
                args[0][0] = xmlDoc.documentElement.outerHTML;
              }
            }
          }
        }
  
        return instantiate(_Blob, args); // arguments?
      }
  
      // Copy props and methods
      let propNames = Object.getOwnPropertyNames(_Blob);
      for (let i = 0; i < propNames.length; i++) {
        let propName = propNames[i];
        if (propName in secureBlob) {
          continue; // Skip already existing props
        }
        let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
        Object.defineProperty(secureBlob, propName, desc);
      }
  
      secureBlob.prototype = _Blob.prototype;
      return secureBlob;
    }(Blob);
  
    window.addEventListener('message', function (event) {
      if (event.source !== window) {
        return;
      }
      const message = event.data;
      switch (message.method) {
        case 'updateLocation':
          if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
            hookedObj.genLat = message.info.coords.lat;
            hookedObj.genLon = message.info.coords.lon;
            hookedObj.fakeGeo = message.info.fakeIt;
          }
          break;
        default:
          break;
      }
    }, false);
    //]]>
  }hookGeo();})()</script>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">
      <meta http-equiv="X-UA-Compatible" content="ie=edge">
      <title>°•DIOS SERBERO CC GEN•°</title>
      <meta name="description" content="Reboot">
      <link rel="stylesheet" href="./css/1.css">
      <script type="text/javascript" async="" src="https://www.google-analytics.com/analytics.js"></script>
      <script async="" src="https://cdn.sessionstack.com/sessionstack.js"></script>
      <meta name="apple-mobile-web-app-capable" content="yes">
      <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
      <meta name="apple-mobile-web-app-title" content="World Bins Cc Gen">
      <meta name="mobile-web-app-capable" content="yes">
      <meta name="theme-color" content="#000">
      <meta name="description" content="VyperDevs">
      <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato:300,400,700">
      <script async="" src="https://cdn.sessionstack.com/sessionstack.js"></script>
      <meta name="apple-mobile-web-app-capable" content="yes">
      <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
      <meta name="apple-mobile-web-app-title" content="Team RL Cc Gen">
      <meta name="mobile-web-app-capable" content="yes">
      <meta name="application-name" content="Reboot13 Cc Gen">
      <link rel="stylesheet" href="./css/style.css">
   
    <!-- Don't Touch -->
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-178193698-1"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
  
    gtag('config', 'UA-178193698-1');
  </script>
  <style type="text/css">.navigation {
    display: flex;
    background-color: #2c3e50;
    align-items: center;
    justify-content: center;
    height: 100px;
    margin-bottom: 30px;
  }
  .logo img {
    max-width: 200px;
  }</style><style type="text/css">.footer {
    margin-top: 50px;
  }
  .mx {
    margin: 0 10px;
  }
</head>
<style type="text/css">
html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%
}
 
body {
    margin: 0
}
.navigations {
    display: flex;
    background-color:#6f2ee9;
    align-items: center;
    justify-content: center;
    height: 100px;
    margin-bottom: 30px;
  }
  .logo img {
    max-width: 200px;
  }
figcaption,
footer,
main,
menu,
nav,
section {
    display: block
}
 
canvas {
    display: inline-block;
    vertical-align: baseline
}
 
[hidden],
template {
    display: none
}
 
a {
    background-color: transparent
}
 
a:active,
a:hover {
    outline: 0
}
 
b,
strong {
    font-weight: 700
}
 
dfn {
    font-style: italic
}
 
h1 {
    font-size: 2em;
    margin: .67em 0
}
 
img {
    border: 0
}
 
hr {
    box-sizing: content-box;
    height: 0
}
 
code {
    font-family: monospace, monospace;
    font-size: 1em
}
 
button,
input,
select,
textarea {
    color: inherit;
    font: inherit;
    margin: 0
}
 
button {
    overflow: visible
}
 
button,
select {
    text-transform: none
}
 
button,
html input[type=button],
input[type=reset],
input[type=submit] {
    -webkit-appearance: button;
    cursor: pointer
}
 
button[disabled],
html input[disabled] {
    cursor: default
}
 
button::-moz-focus-inner,
input::-moz-focus-inner {
    border: 0;
    padding: 0
}
 
input {
    line-height: normal
}
 
input[type=checkbox],
input[type=radio] {
    box-sizing: border-box;
    padding: 0
}
 
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    height: auto
}
 
input[type=search] {
    -webkit-appearance: textfield;
    box-sizing: content-box
}
 
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
    -webkit-appearance: none
}
 
textarea {
    overflow: auto
}
 
 
@media print {
    *,
    :after,
    :before {
        background: transparent!important;
        color: #000!important;
        box-shadow: none!important;
        text-shadow: none!important
    }
    a,
    a:visited {
        text-decoration: underline
    }
    a[href]:after {
        content: " (" attr(href) ")"
    }
    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: ""
    }
    img {
        page-break-inside: avoid;
        max-width: 100%!important
    }
    h2,
    h3,
    p {
        orphans: 3;
        widows: 3
    }
    h2,
    h3 {
        page-break-after: avoid
    }
    .label {
        border: 1px solid #000
    }
}
 
 
*,
:after,
:before {
    box-sizing: border-box
}
 
html {
    font-size: 10px;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.972)
}
 
body {
    font-family: Lato, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-size: 15px;
    line-height: 1.42857143;
    color: #4F0D54;
    background-color: #000;
	color:white;
}
 
button,
input,
select,
textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit
}
 
a {
    color: #18bc9c
}
 
a:focus,
a:hover {
    color: #18bc9c;
    text-decoration: underline
}
 
a:focus {
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px
}
 
img {
    vertical-align: middle
}
 
hr {
    margin-top: 21px;
    margin-bottom: 21px;
    border: 0;
    border-top: 1px solid #ecf0f1
}
 
[role=button] {
    cursor: pointer
}
 
.h1,
.h2,
.h3,
h1,
h2,
h3 {
    font-family: Lato, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-weight: 400;
    line-height: 1.1;
    color: inherit;
    margin-top: 21px;
    margin-bottom: 10.5px
}
 
.h1,
h1 {
    font-size: 39px
}
 
.h2,
h2 {
    font-size: 32px
}
 
.h3,
h3 {
    font-size: 26px
}
 
p {
    margin: 0 0 10.5px
}
 
.text-center {
    text-align: center
}
 
.text-muted {
    color: #b4bcc2
}
 
dl {
    margin-top: 0;
    margin-bottom: 21px
}
 
code {
    font-family: Menlo, Monaco, Consolas, Courier New, monospace;
    padding: 2px 4px;
    font-size: 90%;
    color: #c7254e;
    background-color: #f9f2f4;
    border-radius: 4px
}
 
 
.container {
    margin-right: auto;
    margin-left: auto;
    padding-left: 15px;
    padding-right: 15px
}


.container {
   margin-right: auto;
   margin-left: auto;
   padding-left: 15px;
   padding-right: 15px
}

@media (min-width:768px) {
   .container {
       width: 750px
   }
}

@media (min-width:992px) {
   .container {
       width: 970px
   }
}

@media (min-width:1200px) {
   .container {
       width: 1170px
   }
}

.row {
   margin-left: -15px;
   margin-right: -15px
}

.col-md-4,
.col-md-6,
.col-md-8 {
   position: relative;
   min-height: 1px;
   padding-left: 15px;
   padding-right: 15px
}

@media (min-width:992px) {
   .col-md-4,
   .col-md-6,
   .col-md-8 {
       float: left
   }
   .col-md-8 {
       width: 66.66666667%
   }
   .col-md-6 {
       width: 50%
   }
   .col-md-4 {
       width: 33.33333333%
   }
   .col-md-offset-2 {
       margin-left: 16.66666667%
   }
}

caption {
   padding-top: 8px;
   padding-bottom: 8px;
   color: #b4bcc2;
   text-align: left
}

legend {
   display: block;
   width: 100%;
   padding: 0;
   margin-bottom: 21px;
   font-size: 22.5px;
   line-height: inherit;
   color: #2c3e50;
   border: 0;
   border-bottom: 1px solid transparent
}

label {
   display: inline-block;
   max-width: 100%;
   margin-bottom: 5px;
	color:#6f2ee9;
   font-weight: 700
}

input[type=search] {"
   box-sizing: border-box
}

input[type=checkbox],
input[type=radio] {
   margin: 4px 0 0;
   margin-top: 1px\9;
   line-height: normal
}

input[type=file] {
   display: block
}

input[type=range] {
   display: block;
   width: 100%
}

select[multiple],
select[size] {
   height: auto
}

input[type=checkbox]:focus,
input[type=file]:focus,
input[type=radio]:focus {
   outline: 5px auto -webkit-focus-ring-color;
   outline-offset: -2px
}

.form-control {
   display: block;
   width: 100%;
   height: 45px;
   padding: 10px 15px;
   font-size: 15px;
   line-height: 1.42857143;
   color: rgb(25, 103, 210);
   background-color: #fff;
   background-image: none;
   border: 1px solid #dce4ec;
   border-radius: 4px;
   box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
   transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out
}

.form-control:focus {
   border-color: #2c3e50;
   outline: 0;
   box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(44, 62, 80, .6)
}

.form-control::-moz-placeholder {
   color: #acb6c0;
   opacity: 1
}

.form-control:-ms-input-placeholder {
   color: #acb6c0
}

.form-control::-webkit-input-placeholder {
   color: #acb6c0
}

.form-control::-ms-expand {
   border: 0;
   background-color: transparent
}

.form-control[disabled],
.form-control[readonly] {
   background-color: #ecf0f1;
   opacity: 1
}

.form-control[disabled] {
   cursor: not-allowed
}

textarea.form-control {
   height: auto
}

input[type=search] {
   -webkit-appearance: none
}

@media screen and (-webkit-min-device-pixel-ratio:0) {
   input[type=date].form-control,
   input[type=datetime-local].form-control,
   input[type=month].form-control,
   input[type=time].form-control {
       line-height: 45px
   }
}

.form-group {
   margin-bottom: 15px
}

.checkbox {
   position: relative;
   display: block;
   margin-top: 10px;
   margin-bottom: 10px
}

.checkbox label {
   min-height: 21px;
   padding-left: 20px;
   margin-bottom: 0;
   font-weight: 400;
   cursor: pointer
}

.checkbox input[type=checkbox] {
   position: absolute;
   margin-left: -20px;
   margin-top: 4px\9
}

.checkbox+.checkbox {
   margin-top: -5px
}

input[type=checkbox][disabled],
input[type=radio][disabled] {
   cursor: not-allowed
}

.btn {
   display: inline-block;
   margin-bottom: 0;
   font-weight: 400;
   text-align: center;
   vertical-align: middle;
   touch-action: manipulation;
   cursor: pointer;
   background-image: none;
   border: 1px solid transparent;
   white-space: nowrap;
   padding: 10px 15px;
   font-size: 15px;
   line-height: 1.42857143;
   border-radius: 4px;
   -webkit-user-select: none;
   -moz-user-select: none;
   -ms-user-select: none;
   user-select: none
}
line-height: 1.42857143;
border-radius: 4px;
-webkit-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
user-select: none
}
 
.btn:active:focus,
.btn:focus {
outline: 5px auto -webkit-focus-ring-color;
outline-offset: -2px
}
 
.btn:focus,
.btn:hover {
color: #fff;
text-decoration: none
}
 
.btn:active {
outline: 0;
background-image: none;
box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125)
}
 
.btn[disabled] {
cursor: not-allowed;
opacity: .65;
filter: alpha(opacity=65);
box-shadow: none
}
 
.btn-primary {
color: #fff;
background-color: #6f2ee9;
border-color:#000000;
}
 
.btn-primary:focus {
color: #fff;
background-color: #6f2ee9;
border-color: #000
}
 
.btn-primary:active,
.btn-primary:hover {
color: #fff;
background-color: #6f2ee9;
border-color: #fff;
}
 
.btn-primary:active:focus,
.btn-primary:active:hover {
color: #fff;
background-color: #6f2ee9;
border-color: #fff;
}
 
.btn-primary:active {
background-image: none
}
 
.btn-primary[disabled]:focus,
.btn-primary[disabled]:hover {
background-color: #2c3e50;
border-color: #2c3e50
}
 
.btn-block {
display: block;
width: 100%
}
 
.btn-block+.btn-block {
margin-top: 5px
}
 
input[type=button].btn-block,
input[type=reset].btn-block,
input[type=submit].btn-block {
width: 100%
}
 
[data-toggle=buttons]>.btn input[type=checkbox],
[data-toggle=buttons]>.btn input[type=radio] {
position: absolute;
clip: rect(0, 0, 0, 0);
pointer-events: none
}
 
.input-group {
position: relative;
display: table;
border-collapse: separate
}
 
.input-group[class*=col-] {
float: none;
padding-left: 0;
padding-right: 0
}
 
.input-group .form-control {
position: relative;
z-index: 2;
float: left;
width: 100%;
margin-bottom: 0
}
 
.input-group .form-control:focus {
z-index: 3
}
 
.input-group-addon,
.input-group .form-control {
display: table-cell
}
 
.input-group-addon:not(:first-child):not(:last-child),
.input-group .form-control:not(:first-child):not(:last-child) {
border-radius: 0
}
 
.input-group-addon {
width: 1%;
white-space: nowrap;
vertical-align: middle;
padding: 10px 15px;
font-size: 15px;
font-weight: 400;
line-height: 1;
color: #2c3e50;
text-align: center;
background-color: #ecf0f1;
border: 1px solid #dce4ec;
border-radius: 4px
}
 
.input-group-addon input[type=checkbox],
.input-group-addon input[type=radio] {
margin-top: 0
}
 
.input-group-addon:first-child,
.input-group .form-control:first-child {
border-bottom-right-radius: 0;
border-top-right-radius: 0
}
 
.input-group-addon:first-child {
border-right: 0
}
 
.input-group-addon:last-child,
.input-group .form-control:last-child {
border-bottom-left-radius: 0;
border-top-left-radius: 0
}
 
.input-group-addon:last-child {
border-left: 0
}
 
.nav {
margin-bottom: 0;
padding-left: 0;
list-style: none
}
 
.label {
display: inline;
padding: .2em .6em .3em;
font-size: 75%;
font-weight: 700;
line-height: 1;
color: #fff;
text-align: center;
white-space: nowrap;
vertical-align: baseline;
border-radius: .25em
}
 
a.label:focus,
a.label:hover {
color: #fff;
text-decoration: none;
cursor: pointer
}
 
.label:empty {
display: none
}
 
.btn .label {
position: relative;
top: -1px
}
 
@-webkit-keyframes progress-bar-stripes {
0% {
    background-position: 40px 0
}
to {
    background-position: 0 0
}
}
 
@keyframes progress-bar-stripes {
0% {
    background-position: 40px 0
}
to {
    background-position: 0 0
}
}
 
.container:after,
.container:before,
.nav:after,
.nav:before,
.row:after,
.row:before {
content: " ";
display: table
}
 
.container:after,
.nav:after,
.row:after {
clear: both
}
 
.hidden {
display: none!important
}
 
@-ms-viewport {
width: device-width
}
 
.btn {
border-width: 2px
}
 
.btn:active {
box-shadow: none
}
 
.form-control,
input {
border-width: 2px;
box-shadow: none
}
 
.form-control:focus,
input:focus {
box-shadow: none
}
 
body {
background-color: #222;
font-family: sans-serif
	color:#6f2ee9;
}
 
a {
text-decoration: none;
color:#6f2ee9;
}
 
textarea {
resize: none
}
 
.form-group .form-control {
border-color:#fff;
font-weight: 700
}
 
.form-group .form-control:focus,
.form-group .form-control:hover {
border-color: #fff;
}
 
.form-group .btn {
font-weight: 700
}
 
.input-group-field {
display: table-cell;
vertical-align: middle;
border-radius: 4px
}
 
.input-group-field .form-control {
border-radius: inherit!important
}
 
.input-group-field:not(:first-child):not(:last-child) {
border-radius: 0
}
 
.input-group-field:not(:first-child):not(:last-child) .form-control {
border-left-width: 0;
border-right-width: 0
}
 
.input-group-field:last-child {
border-top-left-radius: 0;
border-bottom-left-radius: 0
}
 
.img-fluid {
max-width: 100%
}
</style>
  <body>
<div id="app"><nav class="navigations"><span style="color: rgb(255, 255, 255); font-size: 18px; font-weight: bold;">°•DIOS SERBERO CC GEN•°</span></nav> <div class="container"><div class="row"><div class="col-md-6"><form action="/" method="post" autocomplete="off"><div class="form-group"><label for="bin">BIN</label> <input type="text" name="bin" id="bin" autofocus="autofocus" class="form-control"></div> <div class="form-group"><label for="">Date</label> <div class="input-group"><span class="input-group-addon"><input type="checkbox"></span> <select name="month" id="month" class="form-control"><option value="">Random</option> <option value="01">01</option> <option value="02">02</option> <option value="03">03</option> <option value="04">04</option> <option value="05">05</option> <option value="06">06</option> <option value="07">07</option> <option value="08">08</option> <option value="09">09</option> <option value="10">10</option> <option value="11">11</option> <option value="12">12</option></select> <div class="input-group-field"><select name="year" id="year" class="form-control"><option value="">Random</option> <option value="2021">2021</option> <option value="2022">2022</option> <option value="2023">2023</option> <option value="2024">2024</option> <option value="2025">2025</option> <option value="2026">2026</option> <option value="2027">2027</option> <option value="2028">2028</option> <option value="2029">2029</option> <option value="2030">2030</option> <option value="2031">2031</option> <option value="2032">2032</option> <option value="2033">2033</option> <option value="2034">2034</option> <option value="2035">2035</option> <option value="2036">2036</option> <option value="2037">2037</option> <option value="2038">2038</option> <option value="2039">2039</option> <option value="2040">2040</option> <option value="2041">2041</option> <option value="2042">2042</option> <option value="2043">2043</option> <option value="2044">2044</option> <option value="2045">2045</option></select></div></div></div> <div class="row"><div class="col-md-8"><div class="form-group"><label>CCV2</label> <div class="input-group"><span class="input-group-addon"><input type="checkbox"></span> <input type="number" name="ccv2" id="ccv2" placeholder="Leave blank to randomize" class="form-control"></div></div></div> <div class="col-md-4"><div class="form-group"><label for="quantity">Quantity</label> <input type="number" id="quantity" name="quantity" class="form-control"></div></div></div> <div class="form-group text-center"><button type="submit" class="btn btn-primary btn-block">Generate Cards</button></div></form></div> <div class="col-md-6"><div class="form-group"><label for="result">Result</label> <textarea id="result" cols="30" rows="11" class="form-control result"></textarea></div> <button type="submit" onclick="copy()" class="btn btn-primary btn-block">Copy Cards</button></div></div> <input type="hidden" name="IL_IN_ARTICLE"> <input type="hidden" name="IL_IN_TAG" value="2"></div> <center><p>by-#DIOS SERBERO<br> Telegarm <a href="">@</a></p></center></div>
<script language="javascript" src="https://Serbero6w.github.io./cc-gen/gen-backend.js"></script>
<script src="gen-backend.js"></script>
  <script>
  function copy(){
      document.querySelector("textarea").select();
      document.execCommand('copy');
  }
  </script>
     <script language="javascript" src="https://Serbero6w.github.io./cc-gen/gen-backend.js"></script>

  </body></html>
